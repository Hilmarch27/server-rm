// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id_rm     String    @id @default(uuid())
  nama      String
  pn        Int       @unique
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  debiturs  Debitur[] // Menambahkan relasi dengan Debitur
}

model Debitur {
  id_debitur         String        @id @default(uuid())
  branch_code        String
  branch_office      String
  uker               String
  user               User?         @relation(fields: [userId], references: [id_rm])
  userId             String?
  pn_pengelola       String
  nama_debitur       String
  nomor_rekening     String
  out_standing       Int
  segmen             String
  phone              String
  desc_loan          String
  intra_ekstra       String
  kolektibilitas     String
  tanggal_charge_off DateTime
  klasifikasiEc      KlasifikasiEC
  aging_ph_1         Int?
  aging_ph_2         Int?
  non_lelangs        NonLelang[] // Menambahkan relasi dengan NonLelang
  lelangs            Lelang[] // Menambahkan relasi dengan Lelang
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
}

enum KlasifikasiEC {
  GOLD
  SILVER
  BRONZE
  HABIS_AGUNAN
}

model Lelang {
  id_lelang           String   @id @default(uuid())
  tindakan            String
  aktifitas_lelang    String
  lelang_ke           String
  nl_lama             String
  nl_baru             String
  kelengkapan_berkas  String
  nomor_tiket         String
  jumlah_hasil_lelang Int
  hasil_lelang        String
  input_web_bri       DateTime
  alamat_agunan       String
  fotoAgunan1         String?
  fotoAgunan2         String?
  fotoAgunan3         String?
  fotoAgunan4         String?
  fotoAgunan5         String?
  fotoAgunan6         String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  debitur             Debitur  @relation(fields: [debiturId], references: [id_debitur]) // Menambahkan relasi dengan Debitur
  debiturId           String
}

model NonLelang {
  id_non_lelang        String   @id @default(uuid())
  tindakan             String
  aktifitas_non_lelang String
  extraordinary        String
  recovery_non_lelang  String
  nl_lama              String
  nl_baru              String
  alamat_agunan        String
  fotoAgunan1          String?
  fotoAgunan2          String?
  fotoAgunan3          String?
  fotoAgunan4          String?
  fotoAgunan5          String?
  fotoAgunan6          String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  debitur              Debitur  @relation(fields: [debiturId], references: [id_debitur]) // Menambahkan relasi dengan Debitur
  debiturId            String
}
